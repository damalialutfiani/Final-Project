# -*- coding: utf-8 -*-
"""Programrx.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MepOshIkepKuxSZK7N1AAQYNp2hD1GnJ
"""

import RPi.GPIO as GPIO
import time
import sys
import re
import csv
from lidar import measure

class rx():
  def vlc(self):
    while True:
      GPIO.setmode(GPIO.BOARD)
      GPIO.setup(11, GPIO.IN)
      tampung = []
      nilainull = 0
      ns = 0
      jumkar = 1
      kartampung = []
      with open ('500_30_2.csv','w') as f:
        while True:
          kondisi = GPIO.input(11)
          if kondisi == 1:
            while True:
              angka = GPIO.input(11)
              tampung.append(angka)
              if angka == 0:
                nilainull = nilainull +1
              if angka == 1:
                nilainull = 0
              if nilainull >=8:
                jumkar = len(tampung) / 8
                kar = int(jumkar)
                jumkar = 8*kar
                tampung = tampung[0:jumkar]
                ba = 8
                bb = 1
                for i in range (0,kar):
                  tampungtemp = tampung[bb:ba]
                  hasil = "".join(format(x) for x in bytearray(tampungtemp))
                  kartampung.append(hasil)
                  ba = ba + 7
                  bb = bb + 7
                  try:
                      kartampung.remove("\x00")
                  except:
                      pass

                pesan = "{0x08b}".join(format(x) for x in kartampung)
                pesan = pesan[0:7]
                pesan = re.sub(',!.}{;:', '', pesan)
                decimal = 0
                timeC = time.strftime("%I")+':'+time.strftime("%M")+':'+time.strftime("%S")
                print("Time: ",timeC)
                print('pesanterima = ',decimal)
                print(pesan)
                d = measure(self)
                print("Distance(cm): %4d" % d)
                thewriter = csv.writer(f)
                thewriter.writerow([timeC, d, decimal])
                tampung=[]
                kartampung=[]
                break
              time.sleep(.01)
            time.sleep(.01)

if __name__ == "__main__":
    tes = rx()
    tes.vlc()
    while True:
        timeC = time.strftime("%I")+':'+time.strftime("%M")+':'+time.strftime("%S")
        d = measure()
        print("Time: ",timeC)
        print("Distance(cm): %4d" % d)
    time.sleep(0.04)